// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eBarbershop.Services.Database;

#nullable disable

namespace eBarbershop.Services.Migrations
{
    [DbContext(typeof(EBarbershop1Context))]
    [Migration("20250430121549_initialdatabasesetup")]
    partial class initialdatabasesetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eBarbershop.Services.Database.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrzavaId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DrzavaId")
                        .HasName("PK__Drzava__89CED866591BA42A");

                    b.ToTable("Drzava", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradId"));

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GradId")
                        .HasName("PK__Grad__B0F3C9A40E7669BB");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D41AE76B96F");

                    b.HasIndex("GradId");

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaId"));

                    b.Property<DateTime>("DatumDodjele")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId")
                        .HasName("PK__Korisnik__1608726E6214C21C");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloga", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<decimal>("UkupnaCijena")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("NarudzbaId")
                        .HasName("PK__Narudzba__FBEC1377BD7AD867");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Narudzba", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.NarudzbaProizvodi", b =>
                {
                    b.Property<int>("NarudzbaProizvodiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaProizvodiId"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int");

                    b.HasKey("NarudzbaProizvodiId")
                        .HasName("PK__Narudzba__FCDB224678561EBB");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("NarudzbaProizvodi", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Novost", b =>
                {
                    b.Property<int>("NovostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NovostId"));

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NovostId")
                        .HasName("PK__Novost__967A35FC7B241E07");

                    b.ToTable("Novost", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Proizvod", b =>
                {
                    b.Property<int>("ProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProizvodId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VrstaProizvodaId")
                        .HasColumnType("int");

                    b.Property<int>("Zalihe")
                        .HasColumnType("int");

                    b.HasKey("ProizvodId")
                        .HasName("PK__Proizvod__21A8BFF826638918");

                    b.HasIndex("VrstaProizvodaId");

                    b.ToTable("Proizvod", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("RecenzijaId")
                        .HasName("PK__Recenzij__D36C6070ABDA537D");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Recenzija", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"));

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44DD9B589314");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Rezervacija", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"));

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vrijeme")
                        .HasColumnType("datetime");

                    b.Property<bool>("isBooked")
                        .HasColumnType("bit");

                    b.HasKey("TerminId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Termin");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloga__DCAB23CB9B2604BB");

                    b.ToTable("Uloga", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Uplatum", b =>
                {
                    b.Property<int>("UplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UplataId"));

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("NacinUplate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.HasKey("UplataId")
                        .HasName("PK__Uplata__C5B165E6CD6C7172");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("Uplata");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Usluga", b =>
                {
                    b.Property<int>("UslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UslugaId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UslugaId")
                        .HasName("PK__Usluga__0BE5E72F6E1F853F");

                    b.ToTable("Usluga", (string)null);
                });

            modelBuilder.Entity("eBarbershop.Services.Database.VrstaProizvoda", b =>
                {
                    b.Property<int>("VrstaProizvodaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaProizvodaId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VrstaProizvodaId")
                        .HasName("PK__VrstaPro__7DC005E063976FC1");

                    b.ToTable("VrstaProizvoda");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Grad", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Drzava", "Drzava")
                        .WithMany("Grads")
                        .HasForeignKey("DrzavaId")
                        .IsRequired()
                        .HasConstraintName("FK__Grad__DrzavaId__267ABA7A");

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Korisnik", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Grad", "Grad")
                        .WithMany("Korisniks")
                        .HasForeignKey("GradId")
                        .IsRequired()
                        .HasConstraintName("FK__Korisnik__GradId__2B3F6F97");

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.KorisnikUloga", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KorisnikU__Koris__2E1BDC42");

                    b.HasOne("eBarbershop.Services.Database.Uloga", "Uloga")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KorisnikU__Uloga__2F10007B");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Narudzba", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Narudzbas")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Narudzba__Korisn__38996AB5");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.NarudzbaProizvodi", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Narudzba", "Narudzba")
                        .WithMany("NarudzbaProizvodis")
                        .HasForeignKey("NarudzbaId")
                        .IsRequired()
                        .HasConstraintName("FK__NarudzbaP__Narud__3B75D760");

                    b.HasOne("eBarbershop.Services.Database.Proizvod", "Proizvod")
                        .WithMany("NarudzbaProizvodis")
                        .HasForeignKey("ProizvodId")
                        .IsRequired()
                        .HasConstraintName("FK__NarudzbaP__Proiz__3C69FB99");

                    b.Navigation("Narudzba");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Proizvod", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.VrstaProizvoda", "VrstaProizvoda")
                        .WithMany("Proizvods")
                        .HasForeignKey("VrstaProizvodaId")
                        .IsRequired()
                        .HasConstraintName("FK__Proizvod__VrstaP__35BCFE0A");

                    b.Navigation("VrstaProizvoda");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Recenzija", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__4316F928");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Rezervacija", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Korisnik", "Klijent")
                        .WithMany("RezervacijeKaoKlijent")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Rezervaci__Klijen__NOVI_CONSTRAINT");

                    b.HasOne("eBarbershop.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RezervacijeKaoFrizer")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Rezervaci__Koris__3F466844");

                    b.HasOne("eBarbershop.Services.Database.Usluga", "Usluga")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("UslugaId")
                        .IsRequired()
                        .HasConstraintName("FK__Rezervaci__Uslug__403A8C7D");

                    b.Navigation("Klijent");

                    b.Navigation("Korisnik");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Termin", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Korisnik", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Termin_Korisnik_Klijent");

                    b.HasOne("eBarbershop.Services.Database.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Termin_Korisnik_Frizer");

                    b.HasOne("eBarbershop.Services.Database.Rezervacija", "Rezervacija")
                        .WithMany("Termins")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Termin_Rezervacija");

                    b.Navigation("Klijent");

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Uplatum", b =>
                {
                    b.HasOne("eBarbershop.Services.Database.Narudzba", "Narudzba")
                        .WithMany("Uplata")
                        .HasForeignKey("NarudzbaId")
                        .IsRequired()
                        .HasConstraintName("FK__Uplata__Narudzba__5070F446");

                    b.Navigation("Narudzba");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Drzava", b =>
                {
                    b.Navigation("Grads");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Grad", b =>
                {
                    b.Navigation("Korisniks");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Korisnik", b =>
                {
                    b.Navigation("KorisnikUlogas");

                    b.Navigation("Narudzbas");

                    b.Navigation("Recenzijas");

                    b.Navigation("RezervacijeKaoFrizer");

                    b.Navigation("RezervacijeKaoKlijent");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Narudzba", b =>
                {
                    b.Navigation("NarudzbaProizvodis");

                    b.Navigation("Uplata");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Proizvod", b =>
                {
                    b.Navigation("NarudzbaProizvodis");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Rezervacija", b =>
                {
                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Uloga", b =>
                {
                    b.Navigation("KorisnikUlogas");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.Usluga", b =>
                {
                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("eBarbershop.Services.Database.VrstaProizvoda", b =>
                {
                    b.Navigation("Proizvods");
                });
#pragma warning restore 612, 618
        }
    }
}
